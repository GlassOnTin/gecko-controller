#!/bin/sh
set -e

# Source debconf library
. /usr/share/debconf/confmodule

# Function to log messages
log() {
    echo "$1" >&2
    logger -t gecko-controller "$1"
}

configure_i2c() {
    CONFIG="/boot/firmware/config.txt"
    if [ -f "$CONFIG" ]; then
        # Remove any existing i2c_arm settings
        sed -i '/^dtparam=i2c_arm/d' "$CONFIG"

        # Add new i2c configuration with lower baud rate
        echo "# Modified by gecko-controller for long I2C cables" >> "$CONFIG"
        echo "dtparam=i2c_arm=on,i2c_arm_baudrate=10000" >> "$CONFIG"

        log "I2C configuration updated in /boot/firmware/config.txt"
    else
        log "Warning: /boot/firmware/config.txt not found - manual I2C configuration may be needed"
    fi
}

configure_system() {
    # Create gecko-controller user if it doesn't exist
    if ! getent passwd gecko-controller > /dev/null; then
        adduser --quiet --system --home /var/lib/gecko-controller --group gecko-controller
    fi

    # Add to required groups - only add to groups that exist
    for group in gpio i2c dialout; do
        if getent group $group > /dev/null; then
            usermod -a -G $group gecko-controller || true
        fi
    done

    # Create required directories with proper permissions
    install -d -m 755 -o gecko-controller -g gpio /var/lib/gecko-controller
    install -d -m 755 -o gecko-controller -g gpio /var/log/gecko-controller
    install -d -m 755 -o gecko-controller -g gpio /var/run/gecko-controller

    # Ensure config directory permissions are correct
    chown -R gecko-controller:gpio /etc/gecko-controller
    chmod 750 /etc/gecko-controller
    chmod 640 /etc/gecko-controller/config.py

    # Set GPIO device permissions if they exist
    if [ -e /dev/gpiomem ]; then
        chmod 660 /dev/gpiomem
        chown root:gpio /dev/gpiomem
    fi

    # Create and set permissions for log file
    touch /var/log/gecko-controller/readings.csv
    chown gecko-controller:gpio /var/log/gecko-controller/readings.csv
    chmod 644 /var/log/gecko-controller/readings.csv
}

case "$1" in
    configure)
        log "Starting gecko-controller post-installation configuration"

        # Configure system user and directories
        configure_system

        # Configure I2C
        configure_i2c

        # Reload systemd in case the service files changed
        if [ -x /bin/systemctl ]; then
            systemctl daemon-reload || true

            # Enable and start services
            systemctl enable gecko-controller.service || true
            systemctl enable gecko-web.service || true

            systemctl restart gecko-controller.service || true
            sleep 2  # Give controller time to initialize
            systemctl restart gecko-web.service || true
        fi

        log "Post-installation configuration completed"
        ;;

    abort-upgrade|abort-remove|abort-deconfigure)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
        ;;

    remove|purge)
        # Stop and disable the services
        systemctl stop gecko-web || true
        systemctl disable gecko-web || true
        systemctl stop gecko-controller || true
        systemctl disable gecko-controller || true

        # Remove the virtual environment
        rm -rf "$VENV_DIR"

        ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.
#DEBHELPER#

exit 0
